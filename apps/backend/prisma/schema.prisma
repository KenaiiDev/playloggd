// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String       @id @default(uuid())
  username     String       @unique
  passwordHash String
  email        String       @unique
  avatarUrl    String
  bio          String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  gameEntries  GameEntry[]
  gameReviews  GameReview[]
}

model GameEntry {
  id             String     @id @default(uuid())
  userId         String
  gameExternalId String
  status         GameStatus
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  user           User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([gameExternalId])
}

model GameReview {
  id             String    @id @default(uuid())
  userId         String
  gameExternalId String
  rating         Float
  content        String
  hoursPlayed    Float?
  playedAt       DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([gameExternalId])
}

enum GameStatus {
  WISHLIST
  BACKLOG
  PLAYING
  ON_HOLD
  COMPLETED
  FULLY_COMPLETED
  DROPPED
  NOT_FOR_ME
  REPLAY
  REVIEWING
}
